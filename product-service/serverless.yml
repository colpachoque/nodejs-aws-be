# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: product-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'sqs:*'
      Resource:
        - Fn::GetAtt: [catalogItemsQueue, Arn]
    - Effect: 'Allow'
      Action:
        - 'sns:*'
      Resource:
        Ref: SNSTopic
  environment:
    SQS_URL:
      Ref: catalogItemsQueue
    SNS_URL:
      Ref: SNSTopic

plugins:
  - serverless-webpack
  - serverless-jest-plugin

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: krakoryak@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
  Outputs:
    SQSUrl:
      Value:
        Ref: catalogItemsQueue

functions:
  getProductsList:
    handler: get-products.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true
          get-products:
  getProductsById:
    handler: get-products-by-id.getProductsById
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
  createProduct:
    handler: create-product.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true
  catalogBatchProcess:
    handler: catalog-batch-process.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
