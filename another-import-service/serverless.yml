service:
  name: importservice
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
frameworkVersion: '2'

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: 'Allow'
      Action: 
        - 's3:ListBucket'
      Resource: 
        - 'arn:aws:s3:::colpachoques-bucket-imported'
    - Effect: 'Allow'
      Action: 
        - 's3:*'
      Resource: 
        - 'arn:aws:s3:::colpachoques-bucket-imported/*'
    - Effect: 'Allow'
      Action:
        - 'sqs:*'
      Resource:
        - 'arn:aws:sqs:eu-west-1:517465834650:catalogItemsQueue'
  environment:
    SQS_URL:
      Fn::ImportValue: SQSUrl
resources:
    Resources:
      GatewayResponseAccessDenied: 
        Type: AWS::ApiGateway::GatewayResponse
        Properties: 
          RestApiId: 
            Ref: ApiGatewayRestApi
          ResponseType: ACCESS_DENIED
          ResponseParameters:
            'gatewayresponse.header.Access-Control-Allow-Origin': "'*'"
            'gatewayresponse.header.Access-Control-Allow-Headers': "'*'"
      GatewayResponseUnauthorized:
        Type: 'AWS::ApiGateway::GatewayResponse'
        Properties:
          RestApiId:
            Ref: ApiGatewayRestApi
          ResponseType: UNAUTHORIZED
          ResponseParameters:
            'gatewayresponse.header.Access-Control-Allow-Origin': "'*'"
            'gatewayresponse.header.Access-Control-Allow-Headers': "'*'"

functions:
  importProductsFile:
    handler: import-products-file.importProductsFile
    events:
      - http:
          path: import
          method: get
          request:
            parameters:
              querystrings:
                name: true
          cors: true
          authorizer:
            arn: arn:aws:lambda:eu-west-1:517465834650:function:authorization-service-dev-basic-authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  importSecondFileParser:
    handler: import-file-parser.importSecondFileParser
    events:
      - s3:
          bucket: colpachoques-bucket-imported
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true